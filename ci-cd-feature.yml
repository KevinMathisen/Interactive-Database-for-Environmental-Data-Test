name: CI/CD (FEATURE)

on:
  pull_request:
    branches:
      - '!main'
      - '!developer'
    paths:
      - 'web-server/**'
  push:
    branches:
      - '!main'
      - '!developer'
    paths:
      - 'web-server/**'
  workflow_dispatch:

jobs:

  test-web-server:
    name: 'Run unit tests for web-server'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install
        working-directory: ./web-server

      - name: Run Tests
        run: npm run test
        working-directory: ./web-server
        
  lint-web-server:
      name: 'Lint code for web-server'
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
  
        - name: Install Dependencies
          run: npm install
          working-directory: ./web-server
  
        - name: Auto-fix linting issues
          run: npm run lint -- --fix
          working-directory: ./web-server
  
        - name: Check if there are linting changes
          id: git-check-lint
          run: |
            git diff --exit-code || echo "::set-output name=changed::true"
          working-directory: ./web-server
  
        - name: Commit linting changes
          if: steps.git-check-lint.outputs.changed == 'true'
          run: |
            changed_files=$(git diff --name-only)
            git commit -am "Lint fixes: $changed_files"
            git push
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ./web-server
        
  prettify-web-server:
    name: 'Prettify code for web-server'
    runs-on: ubuntu-latest
    needs: lint-web-server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all branches and tags are fetched
  
      - name: Install Dependencies
        run: npm install
        working-directory: ./web-server
  
      - name: Pull latest changes
        run: |
          git pull origin ${GITHUB_REF#refs/heads/} --rebase
        working-directory: ./web-server
  
      - name: Prettify code
        run: npm run prettify
        working-directory: ./web-server
  
      - name: Check if there are changes
        id: git-check
        run: |
          git diff --exit-code || echo "::set-output name=changed::true"
        working-directory: ./web-server
  
      - name: Commit changes
        if: steps.git-check.outputs.changed == 'true'
        run: |
          changed_files=$(git diff --name-only)
          git commit -am "Prettify fixes: $changed_files"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./web-server

        
  
# Commented out the 'api-server' related jobs
